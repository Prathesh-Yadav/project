
pipeline {
  agent {
    label "java"
  }
  environment {
    PATH = "/apache-maven-3.9.9/bin:/usr/bin:/bin:/usr/local/bin"
	}
  stages {
    stage('Build') {
      steps {
        sh 'mvn clean install'
      }
    }
    
    stage('jacoco') {
      steps {
        jacoco()
      }
    }
    
    stage('SonarQube analysis') {
      steps {
        script {
          def scannerHome = tool 'scanner_sonar'
          withSonarQubeEnv('jenkins-sonar') {
            sh """
              ${scannerHome}/bin/sonar-scanner \
              -Dsonar.projectKey=javawebapp \
              -Dsonar.projectName=javawebapp \
              -Dsonar.projectVersion=1.0 \
              -Dsonar.java.binaries='target/classes'
            """
          }
        }
      }
    }
    /*
    stage("Sonar Quality Gate Check") {
      steps {
        timeout(time: 1, unit: 'HOURS') {
          script {
            def qualityGate = waitForQualityGate()
            if (qualityGate.status != 'OK') {
              error "Pipeline aborted due to quality gate failure: ${qualityGate.status}"
            }
          }
        }
      }
    }
    */
    stage('Upload to Nexus') {
      steps {
        nexusArtifactUploader(
          artifacts: [[
            artifactId: 'SimpleWebApplication', 
            classifier: '', 
            file: 'target/SimpleWebApplication.war', 
            type: 'war'
          ]], 
          credentialsId: 'nexus', 
          groupId: 'com.maven', 
          nexusUrl: '43.205.214.232:8081/', 
          nexusVersion: 'nexus3', 
          protocol: 'http', 
          repository: 'carapp', 
          version: '1.0.0-SNAPSHOT'
        )
      }
    }

  stage('Download Latest WAR from Nexus, Build image and push back to nexus') {
    agent {
        label "docker"
    }
    steps {
	script {
                  //Define variable
		def dockerImageName = "carapp"
		def dockerTag = "1.0"
		

		echo "Building Docker image..."
		sh """
            	docker build -t carapp:1.0 -f project/docker/dockerfile project/docker
            	"""

                }
         }
     }

      
/*
    stage('Deploy to Tomcat') {
      agent {
        label "Tomcat1"
      }
      steps {
        sh 'sudo systemctl stop tomcat'
      
        sh 'sudo cp /home/tomcat/apache-tomcat-10.1.30/webapps/SimpleWebApplication*.war /home/tomcat/apache-tomcat-10.1.30/webapps/SimpleWebApplication_backup_$(date +"%Y%m%d%H%M%S").war || true'
        
        sh '''
                #!/bin/bash
               NEXUS_URL="http://13.201.120.172:8081/repository/maven-releases-javawebapp/http://13.201.120.172:8081/repository/maven-releases-javawebapp/com/maven/SimpleWebApplication/1.0.0/SimpleWebApplication-1.0.0.war"
               LATEST_BUILD= curl -s "$NEXUS_URL" | tail -4 | head -1 | grep SimpleWebApplication-1.0.0-*.*-*.war
             
                wget --user=admin --password=admin http://13.201.120.172:8081/repository/maven-releases-javawebapp/com/maven/SimpleWebApplication/1.0.0/SimpleWebApplication-1.0.0.war -O /home/tomcat/apache-tomcat-10.1.30/webapps/
                  
      
    '''
        
        sh 'sudo systemctl start tomcat'
      }
    }
  */
  }
}
